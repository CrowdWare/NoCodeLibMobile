<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.6.0">

    <issue
        id="OldTargetApi"
        severity="Warning"
        message="Not targeting the latest versions of Android; compatibility modes apply. Consider testing and updating this version. Consult the `android.os.Build.VERSION_CODES` javadoc for details."
        category="Correctness"
        priority="6"
        summary="Target SDK attribute is not targeting latest version"
        explanation="When your application runs on a version of Android that is more recent than your `targetSdkVersion` specifies that it has been tested with, various compatibility modes kick in. This ensures that your application continues to work, but it may look out of place. For example, if the `targetSdkVersion` is less than 14, your app may get an option button in the UI.&#xA;&#xA;To fix this issue, set the `targetSdkVersion` to the highest available value. Then test your app to make sure everything works correctly. You may want to consult the compatibility notes to see what changes apply to each version you are adding support for: https://developer.android.com/reference/android/os/Build.VERSION_CODES.html as well as follow this guide:&#xA;https://developer.android.com/distribute/best-practices/develop/target-sdk.html"
        url="https://developer.android.com/distribute/best-practices/develop/target-sdk.html"
        urls="https://developer.android.com/distribute/best-practices/develop/target-sdk.html,https://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        errorLine1="        targetSdk = 33"
        errorLine2="        ~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/build.gradle.kts"
            line="24"
            column="9"/>
    </issue>

    <issue
        id="AppBundleLocaleChanges"
        severity="Warning"
        message="Found dynamic locale changes, but did not find corresponding Play Core library calls for downloading languages and splitting by language is not disabled in the `bundle` configuration"
        category="Correctness"
        priority="5"
        summary="App Bundle handling of runtime locale changes"
        explanation="When changing locales at runtime (e.g. to provide an in-app language switcher), the Android App Bundle must be configured to not split by locale or the Play Core library must be used to download additional locales at runtime."
        url="https://developer.android.com/guide/app-bundle/configure-base#handling_language_changes"
        urls="https://developer.android.com/guide/app-bundle/configure-base#handling_language_changes"
        errorLine1="        configuration.setLocale(locale)"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/logic/LocaleManager.kt"
            line="85"
            column="9"/>
    </issue>

    <issue
        id="VectorRaster"
        severity="Warning"
        message="Limit vector icons sizes to 200Ã—200 to keep icon drawing fast; see https://developer.android.com/studio/write/vector-asset-studio#when for more"
        category="Correctness"
        priority="5"
        summary="Vector Image Generation"
        explanation="Vector icons require API 21 or API 24 depending on used features, but when `minSdkVersion` is less than 21 or 24 and Android Gradle plugin 1.4 or higher is used, a vector drawable placed in the `drawable` folder is automatically moved to `drawable-anydpi-v21` or `drawable-anydpi-v24` and bitmap images are generated for different screen resolutions for backwards compatibility.&#xA;&#xA;However, there are some limitations to this raster image generation, and this lint check flags elements and attributes that are not fully supported. You should manually check whether the generated output is acceptable for those older devices."
        errorLine1="    android:width=&quot;288dp&quot;"
        errorLine2="                   ~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/res/drawable/icon.xml"
            line="2"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of `compileSdkVersion` than 33 is available: 34"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    compileSdk = 33"
        errorLine2="    ~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/build.gradle.kts"
            line="12"
            column="5"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.core:core-ktx than 1.13.1 is available: 1.15.0"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation(&quot;androidx.core:core-ktx:1.13.1&quot;)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/build.gradle.kts"
            line="38"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.compose:compose-bom than 2024.04.01 is available: 2025.03.00"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation(platform(&quot;androidx.compose:compose-bom:2024.04.01&quot;))"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/build.gradle.kts"
            line="41"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.lifecycle:lifecycle-runtime-ktx than 2.8.6 is available: 2.8.7"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation(&quot;androidx.lifecycle:lifecycle-runtime-ktx:2.8.6&quot;)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/build.gradle.kts"
            line="45"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.activity:activity-compose than 1.9.2 is available: 1.10.1"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation(&quot;androidx.activity:activity-compose:1.9.2&quot;)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/build.gradle.kts"
            line="46"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of com.google.android.material:material than 1.10.0 is available: 1.12.0"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation(&quot;com.google.android.material:material:1.10.0&quot;)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/build.gradle.kts"
            line="50"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.navigation:navigation-compose than 2.6.0 is available: 2.8.9"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation(&quot;androidx.navigation:navigation-compose:2.6.0&quot;)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/build.gradle.kts"
            line="51"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.media3:media3-exoplayer than 1.4.1 is available: 1.5.1"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation(&quot;androidx.media3:media3-exoplayer:1.4.1&quot;)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/build.gradle.kts"
            line="58"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.media3:media3-exoplayer-dash than 1.4.1 is available: 1.5.1"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation(&quot;androidx.media3:media3-exoplayer-dash:1.4.1&quot;)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/build.gradle.kts"
            line="59"
            column="20"/>
    </issue>

    <issue
        id="GradleDependency"
        severity="Warning"
        message="A newer version of androidx.media3:media3-ui than 1.4.1 is available: 1.5.1"
        category="Correctness"
        priority="4"
        summary="Obsolete Gradle Dependency"
        explanation="This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find."
        errorLine1="    implementation(&quot;androidx.media3:media3-ui:1.4.1&quot;)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/build.gradle.kts"
            line="60"
            column="20"/>
    </issue>

    <issue
        id="ComposableNaming"
        severity="Warning"
        message="Composable functions that return Unit should start with an uppercase letter"
        category="Correctness"
        priority="3"
        summary="Incorrect naming for @Composable functions"
        explanation="@Composable functions without a return type should use similar naming to classes, starting with an uppercase letter and ending with a noun. @Composable functions with a return type should be treated as normal Kotlin functions, starting with a lowercase letter."
        errorLine1="fun renderColumn("
        errorLine2="    ~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="364"
            column="5"/>
    </issue>

    <issue
        id="ComposableNaming"
        severity="Warning"
        message="Composable functions that return Unit should start with an uppercase letter"
        category="Correctness"
        priority="3"
        summary="Incorrect naming for @Composable functions"
        explanation="@Composable functions without a return type should use similar naming to classes, starting with an uppercase letter and ending with a noun. @Composable functions with a return type should be treated as normal Kotlin functions, starting with a lowercase letter."
        errorLine1="fun renderRow("
        errorLine2="    ~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="386"
            column="5"/>
    </issue>

    <issue
        id="ComposableNaming"
        severity="Warning"
        message="Composable functions that return Unit should start with an uppercase letter"
        category="Correctness"
        priority="3"
        summary="Incorrect naming for @Composable functions"
        explanation="@Composable functions without a return type should use similar naming to classes, starting with an uppercase letter and ending with a noun. @Composable functions with a return type should be treated as normal Kotlin functions, starting with a lowercase letter."
        errorLine1="fun renderLazyColumn(mainActivity: BaseComposeActivity, navController: NavHostController, element: UIElement.LazyColumnElement) {"
        errorLine2="    ~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="408"
            column="5"/>
    </issue>

    <issue
        id="ComposableNaming"
        severity="Warning"
        message="Composable functions that return Unit should start with an uppercase letter"
        category="Correctness"
        priority="3"
        summary="Incorrect naming for @Composable functions"
        explanation="@Composable functions without a return type should use similar naming to classes, starting with an uppercase letter and ending with a noun. @Composable functions with a return type should be treated as normal Kotlin functions, starting with a lowercase letter."
        errorLine1="fun renderLazyRow(mainActivity: BaseComposeActivity, navController: NavHostController, element: UIElement.LazyRowElement) {"
        errorLine2="    ~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="438"
            column="5"/>
    </issue>

    <issue
        id="ComposableNaming"
        severity="Warning"
        message="Composable functions that return Unit should start with an uppercase letter"
        category="Correctness"
        priority="3"
        summary="Incorrect naming for @Composable functions"
        explanation="@Composable functions without a return type should use similar naming to classes, starting with an uppercase letter and ending with a noun. @Composable functions with a return type should be treated as normal Kotlin functions, starting with a lowercase letter."
        errorLine1="fun renderText(element: UIElement.TextElement, dataItem: Any) {"
        errorLine2="    ~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="462"
            column="5"/>
    </issue>

    <issue
        id="ComposableNaming"
        severity="Warning"
        message="Composable functions that return Unit should start with an uppercase letter"
        category="Correctness"
        priority="3"
        summary="Incorrect naming for @Composable functions"
        explanation="@Composable functions without a return type should use similar naming to classes, starting with an uppercase letter and ending with a noun. @Composable functions with a return type should be treated as normal Kotlin functions, starting with a lowercase letter."
        errorLine1="fun RowScope.renderMarkdown(modifier: Modifier, element: UIElement.MarkdownElement) {"
        errorLine2="             ~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="476"
            column="14"/>
    </issue>

    <issue
        id="ComposableNaming"
        severity="Warning"
        message="Composable functions that return Unit should start with an uppercase letter"
        category="Correctness"
        priority="3"
        summary="Incorrect naming for @Composable functions"
        explanation="@Composable functions without a return type should use similar naming to classes, starting with an uppercase letter and ending with a noun. @Composable functions with a return type should be treated as normal Kotlin functions, starting with a lowercase letter."
        errorLine1="fun ColumnScope.renderMarkdown(modifier: Modifier, element: UIElement.MarkdownElement) {"
        errorLine2="                ~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="533"
            column="17"/>
    </issue>

    <issue
        id="ComposableNaming"
        severity="Warning"
        message="Composable functions that return Unit should start with an uppercase letter"
        category="Correctness"
        priority="3"
        summary="Incorrect naming for @Composable functions"
        explanation="@Composable functions without a return type should use similar naming to classes, starting with an uppercase letter and ending with a noun. @Composable functions with a return type should be treated as normal Kotlin functions, starting with a lowercase letter."
        errorLine1="fun renderMarkdown(modifier: Modifier, element: UIElement.MarkdownElement, dataItem: Any) {"
        errorLine2="    ~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="590"
            column="5"/>
    </issue>

    <issue
        id="ComposableNaming"
        severity="Warning"
        message="Composable functions that return Unit should start with an uppercase letter"
        category="Correctness"
        priority="3"
        summary="Incorrect naming for @Composable functions"
        explanation="@Composable functions without a return type should use similar naming to classes, starting with an uppercase letter and ending with a noun. @Composable functions with a return type should be treated as normal Kotlin functions, starting with a lowercase letter."
        errorLine1="fun renderButton("
        errorLine2="    ~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="672"
            column="5"/>
    </issue>

    <issue
        id="ComposableNaming"
        severity="Warning"
        message="Composable functions that return Unit should start with an uppercase letter"
        category="Correctness"
        priority="3"
        summary="Incorrect naming for @Composable functions"
        explanation="@Composable functions without a return type should use similar naming to classes, starting with an uppercase letter and ending with a noun. @Composable functions with a return type should be treated as normal Kotlin functions, starting with a lowercase letter."
        errorLine1="fun dynamicImageFromAssets("
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="816"
            column="5"/>
    </issue>

    <issue
        id="ComposableNaming"
        severity="Warning"
        message="Composable functions that return Unit should start with an uppercase letter"
        category="Correctness"
        priority="3"
        summary="Incorrect naming for @Composable functions"
        explanation="@Composable functions without a return type should use similar naming to classes, starting with an uppercase letter and ending with a noun. @Composable functions with a return type should be treated as normal Kotlin functions, starting with a lowercase letter."
        errorLine1="fun dynamicSoundfromAssets(mainActivity: BaseComposeActivity, filename: String, dataItem: Any) {"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="870"
            column="5"/>
    </issue>

    <issue
        id="ComposableNaming"
        severity="Warning"
        message="Composable functions that return Unit should start with an uppercase letter"
        category="Correctness"
        priority="3"
        summary="Incorrect naming for @Composable functions"
        explanation="@Composable functions without a return type should use similar naming to classes, starting with an uppercase letter and ending with a noun. @Composable functions with a return type should be treated as normal Kotlin functions, starting with a lowercase letter."
        errorLine1="fun dynamicVideofromAssets(modifier: Modifier = Modifier, mainActivity: BaseComposeActivity, filename: String, dataItem: Any, height: Int = 200) {"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="904"
            column="5"/>
    </issue>

    <issue
        id="ComposableNaming"
        severity="Warning"
        message="Composable functions that return Unit should start with an uppercase letter"
        category="Correctness"
        priority="3"
        summary="Incorrect naming for @Composable functions"
        explanation="@Composable functions without a return type should use similar naming to classes, starting with an uppercase letter and ending with a noun. @Composable functions with a return type should be treated as normal Kotlin functions, starting with a lowercase letter."
        errorLine1="fun dynamicYoutube(modifier: Modifier = Modifier, videoId: String, height: Int = 200, dataItem: Any) {"
        errorLine2="    ~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="949"
            column="5"/>
    </issue>

    <issue
        id="ComposableNaming"
        severity="Warning"
        message="Composable functions that return Unit should start with an uppercase letter"
        category="Correctness"
        priority="3"
        summary="Incorrect naming for @Composable functions"
        explanation="@Composable functions without a return type should use similar naming to classes, starting with an uppercase letter and ending with a noun. @Composable functions with a return type should be treated as normal Kotlin functions, starting with a lowercase letter."
        errorLine1="fun dynamicScene(modifier: Modifier = Modifier, element: UIElement.SceneElement, dataItem: Any) {"
        errorLine2="    ~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="988"
            column="5"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 26"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="    @RequiresApi(Build.VERSION_CODES.O)"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/BaseComposeActivity.kt"
            line="39"
            column="5"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 24"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="    @RequiresApi(Build.VERSION_CODES.N)"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/ContentLoader.kt"
            line="99"
            column="5"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 26"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="    @RequiresApi(Build.VERSION_CODES.O)"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/ContentLoader.kt"
            line="110"
            column="5"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 26"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="    @RequiresApi(Build.VERSION_CODES.O)"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/ContentLoader.kt"
            line="161"
            column="5"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 26"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="    @RequiresApi(Build.VERSION_CODES.O)"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/ContentLoader.kt"
            line="171"
            column="5"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 26"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="    @RequiresApi(Build.VERSION_CODES.O)"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/ContentLoader.kt"
            line="206"
            column="5"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 26"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="    @RequiresApi(Build.VERSION_CODES.O)"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/ContentLoader.kt"
            line="229"
            column="5"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 26"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="    @RequiresApi(Build.VERSION_CODES.O)"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/ContentLoader.kt"
            line="332"
            column="5"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 26"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="@RequiresApi(Build.VERSION_CODES.O)"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/ui/widgets/DrawerSheet.kt"
            line="64"
            column="1"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 26"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="@RequiresApi(Build.VERSION_CODES.O)"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/ui/widgets/NavigationView.kt"
            line="71"
            column="1"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 26"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="@RequiresApi(Build.VERSION_CODES.O)"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/ui/widgets/NavigationView.kt"
            line="162"
            column="1"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 26"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="@RequiresApi(Build.VERSION_CODES.O)"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="100"
            column="1"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 26"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="@RequiresApi(Build.VERSION_CODES.O)"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="183"
            column="1"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 26"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="@RequiresApi(Build.VERSION_CODES.O)"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="197"
            column="1"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 26"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="@RequiresApi(Build.VERSION_CODES.O)"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="276"
            column="1"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 26"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="@RequiresApi(Build.VERSION_CODES.O)"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="362"
            column="1"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 26"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="@RequiresApi(Build.VERSION_CODES.O)"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="384"
            column="1"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 26"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="@RequiresApi(Build.VERSION_CODES.O)"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="406"
            column="1"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 26"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="@RequiresApi(Build.VERSION_CODES.O)"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="436"
            column="1"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 26"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="@RequiresApi(Build.VERSION_CODES.O)"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="474"
            column="1"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 26"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="@RequiresApi(Build.VERSION_CODES.O)"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="531"
            column="1"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 26"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="@RequiresApi(Build.VERSION_CODES.O)"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="588"
            column="1"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 26"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="@RequiresApi(Build.VERSION_CODES.O)"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="670"
            column="1"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 26"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="@RequiresApi(Build.VERSION_CODES.O)"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="701"
            column="1"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 26"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="@RequiresApi(Build.VERSION_CODES.O)"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="778"
            column="1"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 26"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="@RequiresApi(Build.VERSION_CODES.O)"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="814"
            column="1"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 26"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="@RequiresApi(Build.VERSION_CODES.O)"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="868"
            column="1"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 26"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="@RequiresApi(Build.VERSION_CODES.O)"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="902"
            column="1"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 26"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="@RequiresApi(Build.VERSION_CODES.O)"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="986"
            column="1"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 26"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="@RequiresApi(Build.VERSION_CODES.O)"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/SmlParser.kt"
            line="102"
            column="1"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 26"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="@RequiresApi(Build.VERSION_CODES.O)"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/SmlParser.kt"
            line="339"
            column="1"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 26"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="@RequiresApi(Build.VERSION_CODES.O)"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/SmlParser.kt"
            line="387"
            column="1"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 26"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="@RequiresApi(Build.VERSION_CODES.O)"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/SmlParser.kt"
            line="421"
            column="1"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        severity="Warning"
        message="Do not place Android context classes in static fields (static reference to `NavController` which has field `context` pointing to `Context`); this is a memory leak"
        category="Performance"
        priority="6"
        summary="Static Field Leaks"
        explanation="A static field will leak contexts.&#xA;&#xA;Non-static inner classes have an implicit reference to their outer class. If that outer class is for example a `Fragment` or `Activity`, then this reference means that the long-running handler/loader/task will hold a reference to the activity which prevents it from getting garbage collected.&#xA;&#xA;Similarly, direct field references to activities and fragments from these longer running instances can cause leaks.&#xA;&#xA;ViewModel classes should never point to Views or non-application Contexts."
        errorLine1="    private var navController: NavController? = null"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/ui/widgets/NavigationManager.kt"
            line="25"
            column="5"/>
    </issue>

    <issue
        id="StaticFieldLeak"
        severity="Warning"
        message="Do not place Android context classes in static fields (static reference to `NavController` which has field `context` pointing to `Context`); this is a memory leak"
        category="Performance"
        priority="6"
        summary="Static Field Leaks"
        explanation="A static field will leak contexts.&#xA;&#xA;Non-static inner classes have an implicit reference to their outer class. If that outer class is for example a `Fragment` or `Activity`, then this reference means that the long-running handler/loader/task will hold a reference to the activity which prevents it from getting garbage collected.&#xA;&#xA;Similarly, direct field references to activities and fragments from these longer running instances can cause leaks.&#xA;&#xA;ViewModel classes should never point to Views or non-application Contexts."
        errorLine1="    private var navController: NavController? = null"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/NavigationManager.kt"
            line="25"
            column="5"/>
    </issue>

    <issue
        id="AutoboxingStateCreation"
        severity="Information"
        message="Prefer `mutableIntStateOf` instead of `mutableStateOf`"
        category="Performance"
        priority="3"
        summary="`State&lt;T>` will autobox values assigned to this state. Use a specialized state type instead."
        explanation="Calling `mutableStateOf&lt;T>()` when `T` is either backed by a primitive type on the JVM or is a value class results in a state implementation that requires all state values to be boxed. This usually causes an additional allocation for each state write, and adds some additional work to auto-unbox values when reading the value of the state. Instead, prefer to use a specialized primitive state implementation for `Int`, `Long`, `Float`, and `Double` when the state does not need to track null values and does not override the default `SnapshotMutationPolicy`. See `mutableIntStateOf()`, `mutableLongStateOf()`, `mutableFloatStateOf()`, and `mutableDoubleStateOf()` for more information."
        errorLine1="    var selectedIndex by mutableStateOf(index)"
        errorLine2="                         ~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/ui/widgets/DropDownListboxStateHolder.kt"
            line="34"
            column="26"/>
    </issue>

    <issue
        id="UseTomlInstead"
        severity="Warning"
        message="Use the existing version catalog reference (`libs.androidx.core.ktx`) instead"
        category="Productivity"
        priority="4"
        summary="Use TOML Version Catalog Instead"
        explanation="If your project is using a `libs.versions.toml` file, you should place all Gradle dependencies in the TOML file. This lint check looks for version declarations outside of the TOML file and suggests moving them (and in the IDE, provides a quickfix to performing the operation automatically)."
        errorLine1="    implementation(&quot;androidx.core:core-ktx:1.13.1&quot;)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/build.gradle.kts"
            line="38"
            column="20"/>
    </issue>

    <issue
        id="UseTomlInstead"
        severity="Warning"
        message="Use the existing version catalog reference (`libs.androidx.compose.bom`) instead"
        category="Productivity"
        priority="4"
        summary="Use TOML Version Catalog Instead"
        explanation="If your project is using a `libs.versions.toml` file, you should place all Gradle dependencies in the TOML file. This lint check looks for version declarations outside of the TOML file and suggests moving them (and in the IDE, provides a quickfix to performing the operation automatically)."
        errorLine1="    implementation(platform(&quot;androidx.compose:compose-bom:2024.04.01&quot;))"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/build.gradle.kts"
            line="41"
            column="20"/>
    </issue>

    <issue
        id="UseTomlInstead"
        severity="Warning"
        message="Use version catalog instead"
        category="Productivity"
        priority="4"
        summary="Use TOML Version Catalog Instead"
        explanation="If your project is using a `libs.versions.toml` file, you should place all Gradle dependencies in the TOML file. This lint check looks for version declarations outside of the TOML file and suggests moving them (and in the IDE, provides a quickfix to performing the operation automatically)."
        errorLine1="    implementation(&quot;androidx.compose.ui:ui&quot;)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/build.gradle.kts"
            line="42"
            column="20"/>
    </issue>

    <issue
        id="UseTomlInstead"
        severity="Warning"
        message="Use version catalog instead"
        category="Productivity"
        priority="4"
        summary="Use TOML Version Catalog Instead"
        explanation="If your project is using a `libs.versions.toml` file, you should place all Gradle dependencies in the TOML file. This lint check looks for version declarations outside of the TOML file and suggests moving them (and in the IDE, provides a quickfix to performing the operation automatically)."
        errorLine1="    implementation(&quot;androidx.compose.material:material&quot;)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/build.gradle.kts"
            line="43"
            column="20"/>
    </issue>

    <issue
        id="UseTomlInstead"
        severity="Warning"
        message="Use version catalog instead"
        category="Productivity"
        priority="4"
        summary="Use TOML Version Catalog Instead"
        explanation="If your project is using a `libs.versions.toml` file, you should place all Gradle dependencies in the TOML file. This lint check looks for version declarations outside of the TOML file and suggests moving them (and in the IDE, provides a quickfix to performing the operation automatically)."
        errorLine1="    implementation(&quot;androidx.compose.ui:ui-tooling-preview&quot;)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/build.gradle.kts"
            line="44"
            column="20"/>
    </issue>

    <issue
        id="UseTomlInstead"
        severity="Warning"
        message="Use the existing version catalog reference (`libs.androidx.lifecycle.runtime.ktx`) instead"
        category="Productivity"
        priority="4"
        summary="Use TOML Version Catalog Instead"
        explanation="If your project is using a `libs.versions.toml` file, you should place all Gradle dependencies in the TOML file. This lint check looks for version declarations outside of the TOML file and suggests moving them (and in the IDE, provides a quickfix to performing the operation automatically)."
        errorLine1="    implementation(&quot;androidx.lifecycle:lifecycle-runtime-ktx:2.8.6&quot;)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/build.gradle.kts"
            line="45"
            column="20"/>
    </issue>

    <issue
        id="UseTomlInstead"
        severity="Warning"
        message="Use the existing version catalog reference (`libs.androidx.activity.compose`) instead"
        category="Productivity"
        priority="4"
        summary="Use TOML Version Catalog Instead"
        explanation="If your project is using a `libs.versions.toml` file, you should place all Gradle dependencies in the TOML file. This lint check looks for version declarations outside of the TOML file and suggests moving them (and in the IDE, provides a quickfix to performing the operation automatically)."
        errorLine1="    implementation(&quot;androidx.activity:activity-compose:1.9.2&quot;)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/build.gradle.kts"
            line="46"
            column="20"/>
    </issue>

    <issue
        id="UseTomlInstead"
        severity="Warning"
        message="Use version catalog instead"
        category="Productivity"
        priority="4"
        summary="Use TOML Version Catalog Instead"
        explanation="If your project is using a `libs.versions.toml` file, you should place all Gradle dependencies in the TOML file. This lint check looks for version declarations outside of the TOML file and suggests moving them (and in the IDE, provides a quickfix to performing the operation automatically)."
        errorLine1="    debugImplementation(&quot;androidx.compose.ui:ui-tooling&quot;)"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/build.gradle.kts"
            line="49"
            column="25"/>
    </issue>

    <issue
        id="UseTomlInstead"
        severity="Warning"
        message="Use version catalog instead"
        category="Productivity"
        priority="4"
        summary="Use TOML Version Catalog Instead"
        explanation="If your project is using a `libs.versions.toml` file, you should place all Gradle dependencies in the TOML file. This lint check looks for version declarations outside of the TOML file and suggests moving them (and in the IDE, provides a quickfix to performing the operation automatically)."
        errorLine1="    implementation(&quot;com.google.android.material:material:1.10.0&quot;)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/build.gradle.kts"
            line="50"
            column="20"/>
    </issue>

    <issue
        id="UseTomlInstead"
        severity="Warning"
        message="Use version catalog instead"
        category="Productivity"
        priority="4"
        summary="Use TOML Version Catalog Instead"
        explanation="If your project is using a `libs.versions.toml` file, you should place all Gradle dependencies in the TOML file. This lint check looks for version declarations outside of the TOML file and suggests moving them (and in the IDE, provides a quickfix to performing the operation automatically)."
        errorLine1="    implementation(&quot;androidx.navigation:navigation-compose:2.6.0&quot;)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/build.gradle.kts"
            line="51"
            column="20"/>
    </issue>

    <issue
        id="UseTomlInstead"
        severity="Warning"
        message="Use version catalog instead"
        category="Productivity"
        priority="4"
        summary="Use TOML Version Catalog Instead"
        explanation="If your project is using a `libs.versions.toml` file, you should place all Gradle dependencies in the TOML file. This lint check looks for version declarations outside of the TOML file and suggests moving them (and in the IDE, provides a quickfix to performing the operation automatically)."
        errorLine1="    implementation(&quot;com.squareup.okhttp3:okhttp:4.9.3&quot;)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/build.gradle.kts"
            line="53"
            column="20"/>
    </issue>

    <issue
        id="UseTomlInstead"
        severity="Warning"
        message="Use version catalog instead"
        category="Productivity"
        priority="4"
        summary="Use TOML Version Catalog Instead"
        explanation="If your project is using a `libs.versions.toml` file, you should place all Gradle dependencies in the TOML file. This lint check looks for version declarations outside of the TOML file and suggests moving them (and in the IDE, provides a quickfix to performing the operation automatically)."
        errorLine1="    implementation(&quot;com.github.h0tk3y.betterParse:better-parse:0.4.4&quot;)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/build.gradle.kts"
            line="55"
            column="20"/>
    </issue>

    <issue
        id="UseTomlInstead"
        severity="Warning"
        message="Use version catalog instead"
        category="Productivity"
        priority="4"
        summary="Use TOML Version Catalog Instead"
        explanation="If your project is using a `libs.versions.toml` file, you should place all Gradle dependencies in the TOML file. This lint check looks for version declarations outside of the TOML file and suggests moving them (and in the IDE, provides a quickfix to performing the operation automatically)."
        errorLine1="    implementation(&quot;androidx.media3:media3-exoplayer:1.4.1&quot;)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/build.gradle.kts"
            line="58"
            column="20"/>
    </issue>

    <issue
        id="UseTomlInstead"
        severity="Warning"
        message="Use version catalog instead"
        category="Productivity"
        priority="4"
        summary="Use TOML Version Catalog Instead"
        explanation="If your project is using a `libs.versions.toml` file, you should place all Gradle dependencies in the TOML file. This lint check looks for version declarations outside of the TOML file and suggests moving them (and in the IDE, provides a quickfix to performing the operation automatically)."
        errorLine1="    implementation(&quot;androidx.media3:media3-exoplayer-dash:1.4.1&quot;)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/build.gradle.kts"
            line="59"
            column="20"/>
    </issue>

    <issue
        id="UseTomlInstead"
        severity="Warning"
        message="Use version catalog instead"
        category="Productivity"
        priority="4"
        summary="Use TOML Version Catalog Instead"
        explanation="If your project is using a `libs.versions.toml` file, you should place all Gradle dependencies in the TOML file. This lint check looks for version declarations outside of the TOML file and suggests moving them (and in the IDE, provides a quickfix to performing the operation automatically)."
        errorLine1="    implementation(&quot;androidx.media3:media3-ui:1.4.1&quot;)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/build.gradle.kts"
            line="60"
            column="20"/>
    </issue>

    <issue
        id="UseTomlInstead"
        severity="Warning"
        message="Use version catalog instead"
        category="Productivity"
        priority="4"
        summary="Use TOML Version Catalog Instead"
        explanation="If your project is using a `libs.versions.toml` file, you should place all Gradle dependencies in the TOML file. This lint check looks for version declarations outside of the TOML file and suggests moving them (and in the IDE, provides a quickfix to performing the operation automatically)."
        errorLine1="    implementation(&quot;com.pierfrancescosoffritti.androidyoutubeplayer:core:12.1.0&quot;)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/build.gradle.kts"
            line="63"
            column="20"/>
    </issue>

    <issue
        id="UseTomlInstead"
        severity="Warning"
        message="Use version catalog instead"
        category="Productivity"
        priority="4"
        summary="Use TOML Version Catalog Instead"
        explanation="If your project is using a `libs.versions.toml` file, you should place all Gradle dependencies in the TOML file. This lint check looks for version declarations outside of the TOML file and suggests moving them (and in the IDE, provides a quickfix to performing the operation automatically)."
        errorLine1="    implementation(&quot;com.google.android.filament:filament-android:1.54.5&quot;)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/build.gradle.kts"
            line="66"
            column="20"/>
    </issue>

    <issue
        id="UseTomlInstead"
        severity="Warning"
        message="Use version catalog instead"
        category="Productivity"
        priority="4"
        summary="Use TOML Version Catalog Instead"
        explanation="If your project is using a `libs.versions.toml` file, you should place all Gradle dependencies in the TOML file. This lint check looks for version declarations outside of the TOML file and suggests moving them (and in the IDE, provides a quickfix to performing the operation automatically)."
        errorLine1="    implementation(&quot;com.google.android.filament:filament-utils-android:1.54.5&quot;)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/build.gradle.kts"
            line="67"
            column="20"/>
    </issue>

    <issue
        id="UseTomlInstead"
        severity="Warning"
        message="Use version catalog instead"
        category="Productivity"
        priority="4"
        summary="Use TOML Version Catalog Instead"
        explanation="If your project is using a `libs.versions.toml` file, you should place all Gradle dependencies in the TOML file. This lint check looks for version declarations outside of the TOML file and suggests moving them (and in the IDE, provides a quickfix to performing the operation automatically)."
        errorLine1="    implementation(&quot;com.google.android.filament:gltfio-android:1.54.5&quot;)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/build.gradle.kts"
            line="68"
            column="20"/>
    </issue>

    <issue
        id="ClickableViewAccessibility"
        severity="Warning"
        message="Custom view ``SurfaceView`` has `setOnTouchListener` called on it but does not override `performClick`"
        category="Accessibility"
        priority="6"
        summary="Accessibility in Custom Views"
        explanation="If a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur."
        errorLine1="            surfaceView.setOnTouchListener(modelViewer)"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/art/SourceCode/NoCode/NoCodeBrowser/nocodelibmobile/src/main/java/at/crowdware/nocodelibmobile/utils/PageLoader.kt"
            line="1043"
            column="13"/>
    </issue>

</issues>
